---

- block:
  - name: Check sudo access
    delegate_to: localhost
    shell: "sudo -n id"
    ignore_errors: yes
    no_log: yes
    register: result

  - name:
    debug: msg="You need to have local sudo access to run this playbook"
    when: result.failed == True

  - name:
    meta: end_play
    when: result.failed == True

  - name: Reset sudo timestamp
    delegate_to: localhost
    no_log: yes
    shell: "sudo -v"

  - name: Create ELK instances
    delegate_to: localhost
    uri:
      headers:
        Content-type: application/json
        X-Auth-Token: "{{ api_token }}"
      url: "{{ cp_api }}/servers"
      method: POST
      body_format: json
      body: "{{ lookup('template', 'create_instance.json.j2', convert_data=False) | from_json }}"
      status_code: 201
    register: instance
    until: instance.status == 201
    retries: 10
    delay: 6

  - name: Add cloud-init script
    delegate_to: localhost
    uri:
      headers:
        Content-type: text/plain
        X-Auth-Token: "{{ api_token }}"
      url: "{{ cp_api }}/servers/{{ instance.json.server.id }}/user_data/cloud-init"
      method: PATCH
      body: "{{ lookup('file', '../elk-cloud-init') }}"
      status_code: 204

  - name: Boot created instance
    delegate_to: localhost
    uri:
      headers:
        Content-type: application/json
        X-Auth-Token: "{{ api_token }}"
      url: "{{ cp_api }}/servers/{{ instance.json.server.id }}/action"
      method: POST
      body_format: json
      body: { "action": "poweron" }
      status_code: 202

  - name: Wait for instance to be running
    no_log: yes
    delegate_to: localhost
    uri:
      headers:
        Content-type: application/json
        X-Auth-Token: "{{ api_token }}"
      url: "{{ cp_api }}/servers/{{ instance.json.server.id }}"
    register: result
    until: result.json.server.state == 'running'
    retries: 10
    delay: 30

  - name:
    debug: msg="{{ result.json.server }}"


  - name: Add host info to  /etc/hosts
    delegate_to: localhost
    become: yes
    lineinfile: dest=/etc/hosts line="{{ result.json.server.public_ip.address }}     {{ inventory_hostname }}"

  become: no

